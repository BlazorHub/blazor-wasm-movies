# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'vs2017-win2016'

variables:
  buildConfiguration: 'Release'
  myproject: 'BlazorMovies/Server/BlazorMovies.Server.csproj'
  solution: 'BlazorMovies/BlazorMovies.sln'
steps:

- task: NuGetToolInstaller@1
  displayName: 'Install NuGet 4.9.1'
  inputs:
    versionSpec: '4.9.1'
    checkLatest: true
- task: NuGetCommand@2
  displayName: 'Restore NuGet Packages'
  inputs:
    command: 'restore'
    restoreSolution: $(solution)
    feedsToUse: 'select'
    vstsFeed: '58ba5242-1f79-4101-98f0-d37a530fdf11'
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '3.x'
- script: dotnet build $(solution) --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'
- task: CmdLine@2
  displayName: 'Installing EF Core CLI tools'
  inputs:
    script: 'dotnet tool install --global dotnet-ef'
- task: CmdLine@2
  displayName: 'Generating DB script'
  inputs:
    script: 'dotnet ef migrations script -i -o $(Build.ArtifactStagingDirectory)\migrate.sql --project $(myproject)'
- task: DotNetCoreCLI@2
  displayName: 'Publishing App...'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: $(myproject)
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory) --self-contained --runtime win-x86'
    zipAfterPublish: false
    modifyOutputPath: false
- task: PublishBuildArtifacts@1
  displayName: 'Publishing Build Artifacts...'